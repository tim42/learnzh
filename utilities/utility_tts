#!/bin/bash # just for automatic syntactic coloration purpose

## Perform TTS using the google-cloud service
## It requires a specific file to be set that acts as an auth key for the services

conf_tts_cache="$conf_base_path/ttscache" # dumb cache where only the last query is stored. Avoid repetitive queries. (this allows me to code dumb)

# can be changed as necessary in the conf file. It defaults to the env variable, if set.
conf_google_app_creds="$conf_base_path/gcloud-auth.json"
[ -f "$conf_google_app_creds" ] || conf_google_app_creds="$GOOGLE_APPLICATION_CREDENTIALS"
help_conf_google_app_creds="Path to the google cred JSON file"

gbl_opt_use_tts=true
help_gbl_opt_use_tts="Whether or not text-to-speech will be enabled or disabled (note: if the requirements are not present, it will still be disabled)"

# we optionally enable TTS as the requirement are not common
has gcloud && has jq && has play && has base64 && can_use_tts=true || can_use_tts=false

$can_use_tts && debug_log "TTS Enabled"
$can_use_tts || debug_log "TTS Disabled"

function is_tts_enabled
{
    { $gbl_opt_use_tts && $can_use_tts ; } || return 1
    [ ! -f "$conf_google_app_creds" ] && return 1
    return 0
}

# output the raw mp3 file to stdout
function tts # lang, voice, text
{
    { $gbl_opt_use_tts && $can_use_tts ; } || { log 1>&2 "TTS disabled, yet there is a call to: tts $@" ; return 1 ; } # TTS is disabled, so no TTS
    [ ! -f "$conf_google_app_creds" ] && { log 1>&2 "invalid TTS configuration: require a value in conf_google_app_creds" ; return 2 ; }

    local lang="$1"
    local voice="$1-$2"
    local text="$3"
    local data=""

    read -r -d '' data <<EOF
{
  "input":{
    "text":$(jq -Rs . <<<"$text")
  },
  "voice":{
    "languageCode":"$lang",
    "name":"$voice"
  },
  "audioConfig":{
    "audioEncoding":"MP3"
  }
}
EOF

    cache_get "$conf_tts_cache" "$data" ||
    (
        local creds="$( GOOGLE_APPLICATION_CREDENTIALS="$conf_google_app_creds" gcloud auth application-default print-access-token)"

        curl -s -X POST -H "Authorization: Bearer $creds" -H 'Content-Type: application/json; charset=utf-8' -d "$data" 'https://texttospeech.googleapis.com/v1/text:synthesize' | jq -r '.audioContent' | base64 -d | cache_put "$conf_tts_cache" "$data"
    )
}

function play_mp3
{
    play -t mp3 -q -
}

function tts_play # see tts
{
    tts "$@" | play_mp3
}
